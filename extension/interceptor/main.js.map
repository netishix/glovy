{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/overview/overview.component.html","webpack:///./src/app/components/overview/overview.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OverviewComponent } from './components/overview/overview.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'overview', pathMatch: 'full'},\n  {path: 'overview', component: OverviewComponent},\n  {path: '**', redirectTo: 'overview', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-chrome-extension';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { OverviewComponent } from './components/overview/overview.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OverviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"row\">\n<!--        <h3 class=\"text-center text-muted\">Welcome to...</h3>-->\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h4 class=\"card-title text-muted\">\n                Intercepted HTTP ({{requests.length}})\n              </h4>\n              <div id=\"outgoing-requests-table-wrapper\">\n                <table class=\"table table-bordered table-hover table-striped table-sm\">\n                  <thead class=\"text-muted\">\n                  <tr>\n                    <th class=\"text-center\" style=\"width: 10%\">#</th>\n                    <th class=\"text-center\" style=\"width: 30%\">Origin</th>\n                    <th class=\"text-center\" style=\"width: 30%\">Target</th>\n                    <th class=\"text-center\" style=\"width: 10%\">Method</th>\n                    <th class=\"text-center\" style=\"width: 20%\">Body</th>\n                    <th class=\"text-center\" style=\"width: 20%\">Actions</th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  <tr *ngFor=\"let request of requests;let i = index;\">\n                    <th class=\"text-truncate text-center\">{{i}}</th>\n                    <td class=\"text-truncate\">{{request.origin}}</td>\n                    <td class=\"text-truncate\">{{request.target}}</td>\n                    <td class=\"text-truncate text-center\">{{request.method}}</td>\n                    <td class=\"text-truncate\">{{request.body}}</td>\n                    <td>some actions</td>\n                  </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { HttpRequest } from '../../types';\n\ndeclare let chrome;\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  public requests: HttpRequest[];\n\n  constructor(\n    public _ChangeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.requests = [];\n    this.registerEvents();\n  }\n\n  public registerEvents(): void {\n    chrome.webRequest.onBeforeRequest.addListener(\n      (details) => {\n        const outgoingHttpRequest = {\n          origin: details.initiator,\n          target: details.url,\n          method: details.method,\n          body: details.body,\n        };\n        if(this.requests.length < 100){\n          this.requests.push(outgoingHttpRequest);\n          this.detectChanges();\n        }\n    },\n      {urls: ['<all_urls>']},\n    );\n  }\n\n  public detectChanges() {\n    this._ChangeDetectorRef.detectChanges()\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}